{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\subhankar\\\\Desktop\\\\React-Project\\\\moviehub\\\\src\\\\Component\\\\MovieList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"../ComponentStyle/MovieListStyle.css\";\nimport Card from \"./Card\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieList = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const fetchMovies = async () => {\n    const apiKey = \"4eee0494b9dc4b3dd0c76812804c13c1\";\n    const url = `https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&language=en-US&page=${page}`;\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      const {\n        results,\n        total_pages\n      } = data;\n      setMovies(prevMovies => [...prevMovies, ...results]);\n      setTotalPages(total_pages);\n    } catch (error) {\n      console.error(\"Error fetching movies:\", error);\n    }\n  };\n  const fetchMoreMovies = () => {\n    if (page < totalPages) {\n      setPage(page + 1);\n    }\n  };\n  useEffect(() => {\n    fetchMovies();\n  }, [page]);\n  return /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n    dataLength: movies.length,\n    next: fetchMoreMovies,\n    hasMore: page < totalPages,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie__list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list__cards\",\n        children: [\" \", movies.map(movie => /*#__PURE__*/_jsxDEV(Card, {\n          movie: movie\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 37\n        }, this)), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 14\n  }, this);\n};\n_s(MovieList, \"q7CSFiEcKTlOvAW7sQynPvJqa5A=\");\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useEffect","useState","Card","InfiniteScroll","jsxDEV","_jsxDEV","MovieList","_s","movies","setMovies","page","setPage","totalPages","setTotalPages","fetchMovies","apiKey","url","response","fetch","data","json","results","total_pages","prevMovies","error","console","fetchMoreMovies","dataLength","length","next","hasMore","children","className","map","movie","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/subhankar/Desktop/React-Project/moviehub/src/Component/MovieList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"../ComponentStyle/MovieListStyle.css\";\r\nimport Card from \"./Card\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nconst MovieList = () => {\r\n    const [movies, setMovies] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [totalPages, setTotalPages] = useState(0);\r\n\r\n    const fetchMovies = async() => {\r\n        const apiKey = \"4eee0494b9dc4b3dd0c76812804c13c1\";\r\n        const url = `https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&language=en-US&page=${page}`;\r\n\r\n        try {\r\n            const response = await fetch(url);\r\n            const data = await response.json();\r\n            const { results, total_pages } = data;\r\n\r\n            setMovies((prevMovies) => [...prevMovies, ...results]);\r\n            setTotalPages(total_pages);\r\n        } catch (error) {\r\n            console.error(\"Error fetching movies:\", error);\r\n        }\r\n    };\r\n\r\n    const fetchMoreMovies = () => {\r\n        if (page < totalPages) {\r\n            setPage(page + 1);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchMovies();\r\n    }, [page]);\r\n\r\n    return ( <\r\n        InfiniteScroll dataLength = { movies.length }\r\n        next = { fetchMoreMovies }\r\n        hasMore = { page < totalPages } >\r\n        <\r\n        div className = \"movie__list\" >\r\n        <\r\n        div className = \"list__cards\" > {\r\n            movies.map((movie) => ( <\r\n                Card key = { movie.id }\r\n                movie = { movie }\r\n                />\r\n            ))\r\n        } <\r\n        /div> <\r\n        /div> <\r\n        /InfiniteScroll>\r\n    );\r\n};\r\n\r\nexport default MovieList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,sCAAsC;AAC7C,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,cAAc,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAE/C,MAAMa,WAAW,GAAG,MAAAA,CAAA,KAAW;IAC3B,MAAMC,MAAM,GAAG,kCAAkC;IACjD,MAAMC,GAAG,GAAI,sDAAqDD,MAAO,wBAAuBL,IAAK,EAAC;IAEtG,IAAI;MACA,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;MACjC,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,MAAM;QAAEC,OAAO;QAAEC;MAAY,CAAC,GAAGH,IAAI;MAErCV,SAAS,CAAEc,UAAU,IAAK,CAAC,GAAGA,UAAU,EAAE,GAAGF,OAAO,CAAC,CAAC;MACtDR,aAAa,CAACS,WAAW,CAAC;IAC9B,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD;EACJ,CAAC;EAED,MAAME,eAAe,GAAGA,CAAA,KAAM;IAC1B,IAAIhB,IAAI,GAAGE,UAAU,EAAE;MACnBD,OAAO,CAACD,IAAI,GAAG,CAAC,CAAC;IACrB;EACJ,CAAC;EAEDV,SAAS,CAAC,MAAM;IACZc,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,CAACJ,IAAI,CAAC,CAAC;EAEV,oBAASL,OAAA,CACLF,cAAc;IAACwB,UAAU,EAAKnB,MAAM,CAACoB,MAAQ;IAC7CC,IAAI,EAAKH,eAAiB;IAC1BI,OAAO,EAAKpB,IAAI,GAAGE,UAAY;IAAAmB,QAAA,gBAC/B1B,OAAA;MACI2B,SAAS,EAAG,aAAa;MAAAD,QAAA,gBAC7B1B,OAAA;QACI2B,SAAS,EAAG,aAAa;QAAAD,QAAA,GAAE,GAAC,EAC5BvB,MAAM,CAACyB,GAAG,CAAEC,KAAK,iBAAO7B,OAAA,CACpBH,IAAI;UACJgC,KAAK,EAAKA;QAAO,GADJA,KAAK,CAACC,EAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEpB,CACJ,CAAC,EACL,GAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAExB,CAAC;AAAChC,EAAA,CAjDID,SAAS;AAAAkC,EAAA,GAATlC,SAAS;AAmDf,eAAeA,SAAS;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}