{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\subhankar\\\\Desktop\\\\React-Project\\\\moviehub\\\\src\\\\Component\\\\MovieList.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import \"../ComponentStyle/MovieListStyle.css\";\n// import { useParams } from \"react-router-dom\";\n// import Card from \"./Card\";\n// import InfiniteScroll from \"react-infinite-scroll-component\";\n\n// const MovieList = (movie) => {\n//   const [movieList, setMovieList] = useState([]);\n//   const { type } = useParams();\n//   const [page, setpage] = useState(1);\n\n//   // useEffect(() => {\n//   //     getData()\n//   // }, [])\n\n//   useEffect(() => {\n//     getData();\n//   }, [type]);\n\n//   const getData = () => {\n//     fetch(\n//       `https://api.themoviedb.org/3/movie/popular?api_key=4eee0494b9dc4b3dd0c76812804c13c1&language=en-US`\n//     )\n//       .then((res) => res.json())\n//       .then((data) => setMovieList(data.results));\n//   };\n\n//   const fetchMoreData = async () => {\n//     setpage(page + 1);\n//     fetch(\n//         `https://api.themoviedb.org/3/movie/popular?api_key=4eee0494b9dc4b3dd0c76812804c13c1&language=en-US`\n//       )\n//         .then((res) => res.json())\n//         .then((data) => setMovieList(data.results));\n//     };\n\n//   return (\n//     <>\n//       <InfiniteScroll\n//         dataLength={movieList.length}\n//         next={fetchMoreData}\n//         hasMore={movieList}\n//       >\n//         <div className=\"movie__list\" key={movie.poster_path}>\n//           <h2 className=\"list__title\">\n//             {\" \"}\n//             {(type ? type : \"POPULAR\").toUpperCase()}{\" \"}\n//           </h2>{\" \"}\n//           <div className=\"list__cards\">\n//             {\" \"}\n//             {movieList.map((movie) => (\n//               <Card movie={movie} />\n//             ))}{\" \"}\n//           </div>{\" \"}\n//         </div>\n//       </InfiniteScroll>\n//     </>\n//   );\n// };\n\n// export default MovieList;\n\nimport React, { useEffect, useState } from \"react\";\nimport \"../ComponentStyle/MovieListStyle.css\";\nimport { useParams } from \"react-router-dom\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MovieList = props => {\n  _s();\n  const [articles, setArticles] = useState([]);\n  const [loding, setloding] = useState(false);\n  const [page, setpage] = useState(1);\n  const [totalResults, settotalResults] = useState(0);\n  const UpdateNews = async () => {\n    // life cycle method\n    let url = `https://api.themoviedb.org/3/movie/popular?api_key=4eee0494b9dc4b3dd0c76812804c13c1&language=en-US`;\n    setloding(true);\n    let data = await fetch(url);\n    let parsedData = await data.json();\n    console.log(parsedData);\n    setArticles(parsedData.articles);\n    settotalResults(parsedData.totalResults);\n    setloding(false);\n  };\n  useEffect(() => {\n    UpdateNews();\n  }, []);\n  const fetchMoreData = async () => {\n    setpage(page + 1);\n    let url = `https://api.themoviedb.org/3/movie/popular?api_key=4eee0494b9dc4b3dd0c76812804c13c1&language=en-US`;\n    // this.setState({ loding: true });\n    let data = await fetch(url);\n    let parsedData = await data.json();\n    setArticles(articles.concat(parsedData.articles));\n    settotalResults(parsedData.totalResults);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", \" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" NewsMonkey - Top Headlines From \", props.category, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 54\n    }, this), \" \", loding && /*#__PURE__*/_jsxDEV(LoSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 84\n    }, this), \" \", /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      dataLength: articles.length,\n      next: fetchMoreData,\n      hasMore: articles.length !== totalResults,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [\"return ( \", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie__list\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"list__title\",\n              children: [\" \", (type ? type : \"POPULAR\").toUpperCase(), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 13\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"list__cards\",\n              children: [\" \", articles.map(movie => /*#__PURE__*/_jsxDEV(Cards, {\n                movie: movie\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 43\n              }, this)), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 18\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 18\n          }, this), \"); \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 102\n    }, this), \" \"]\n  }, void 0, true);\n};\n_s(MovieList, \"8n/pfyYDLg7Z5VWxoasANbV9IvE=\");\n_c = MovieList;\nNews.defaultProps = {\n  country: \"in\",\n  pageSize: 6,\n  category: \"general\"\n};\nNews.propTypes = {\n  country: PropTypes.string,\n  pageSize: PropTypes.number,\n  category: PropTypes.string\n};\nexport default News;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useEffect","useState","useParams","InfiniteScroll","jsxDEV","_jsxDEV","Fragment","_Fragment","MovieList","props","_s","articles","setArticles","loding","setloding","page","setpage","totalResults","settotalResults","UpdateNews","url","data","fetch","parsedData","json","console","log","fetchMoreData","concat","children","category","fileName","_jsxFileName","lineNumber","columnNumber","LoSpinner","dataLength","length","next","hasMore","className","type","toUpperCase","map","movie","Cards","_c","News","defaultProps","country","pageSize","propTypes","PropTypes","string","number","$RefreshReg$"],"sources":["C:/Users/subhankar/Desktop/React-Project/moviehub/src/Component/MovieList.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import \"../ComponentStyle/MovieListStyle.css\";\r\n// import { useParams } from \"react-router-dom\";\r\n// import Card from \"./Card\";\r\n// import InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\n// const MovieList = (movie) => {\r\n//   const [movieList, setMovieList] = useState([]);\r\n//   const { type } = useParams();\r\n//   const [page, setpage] = useState(1);\r\n\r\n//   // useEffect(() => {\r\n//   //     getData()\r\n//   // }, [])\r\n\r\n//   useEffect(() => {\r\n//     getData();\r\n//   }, [type]);\r\n\r\n//   const getData = () => {\r\n//     fetch(\r\n//       `https://api.themoviedb.org/3/movie/popular?api_key=4eee0494b9dc4b3dd0c76812804c13c1&language=en-US`\r\n//     )\r\n//       .then((res) => res.json())\r\n//       .then((data) => setMovieList(data.results));\r\n//   };\r\n\r\n//   const fetchMoreData = async () => {\r\n//     setpage(page + 1);\r\n//     fetch(\r\n//         `https://api.themoviedb.org/3/movie/popular?api_key=4eee0494b9dc4b3dd0c76812804c13c1&language=en-US`\r\n//       )\r\n//         .then((res) => res.json())\r\n//         .then((data) => setMovieList(data.results));\r\n//     };\r\n\r\n//   return (\r\n//     <>\r\n//       <InfiniteScroll\r\n//         dataLength={movieList.length}\r\n//         next={fetchMoreData}\r\n//         hasMore={movieList}\r\n//       >\r\n//         <div className=\"movie__list\" key={movie.poster_path}>\r\n//           <h2 className=\"list__title\">\r\n//             {\" \"}\r\n//             {(type ? type : \"POPULAR\").toUpperCase()}{\" \"}\r\n//           </h2>{\" \"}\r\n//           <div className=\"list__cards\">\r\n//             {\" \"}\r\n//             {movieList.map((movie) => (\r\n//               <Card movie={movie} />\r\n//             ))}{\" \"}\r\n//           </div>{\" \"}\r\n//         </div>\r\n//       </InfiniteScroll>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default MovieList;\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"../ComponentStyle/MovieListStyle.css\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nconst MovieList = (props) => {\r\n    const [articles, setArticles] = useState([]);\r\n    const [loding, setloding] = useState(false);\r\n    const [page, setpage] = useState(1);\r\n    const [totalResults, settotalResults] = useState(0);\r\n\r\n    const UpdateNews = async() => {\r\n        // life cycle method\r\n        let url = `https://api.themoviedb.org/3/movie/popular?api_key=4eee0494b9dc4b3dd0c76812804c13c1&language=en-US`;\r\n        setloding(true);\r\n        let data = await fetch(url);\r\n        let parsedData = await data.json();\r\n        console.log(parsedData);\r\n        setArticles(parsedData.articles);\r\n        settotalResults(parsedData.totalResults);\r\n        setloding(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        UpdateNews();\r\n    }, []);\r\n\r\n    const fetchMoreData = async() => {\r\n        setpage(page + 1);\r\n        let url = `https://api.themoviedb.org/3/movie/popular?api_key=4eee0494b9dc4b3dd0c76812804c13c1&language=en-US`;\r\n        // this.setState({ loding: true });\r\n        let data = await fetch(url);\r\n        let parsedData = await data.json();\r\n        setArticles(articles.concat(parsedData.articles));\r\n        settotalResults(parsedData.totalResults);\r\n    };\r\n\r\n    return ( <\r\n        > { /* <div className=\"container my-3\"> */ } <\r\n        h2 > NewsMonkey - Top Headlines From { props.category } < /h2> { loding && < LoSpinner / > } <\r\n        InfiniteScroll dataLength = { articles.length }\r\n        next = { fetchMoreData }\r\n        hasMore = { articles.length !== totalResults } >\r\n        <\r\n        div className = \"container\" >\r\n        <\r\n        div className = \"row\" >\r\n        return ( <\r\n            div className = \"movie__list\" >\r\n            <\r\n            h2 className = \"list__title\" > {\r\n                (type ? type : \"POPULAR\").toUpperCase() } <\r\n            /h2> <\r\n            div className = \"list__cards\" > {\r\n                articles.map((movie) => ( <\r\n                    Cards movie = { movie }\r\n                    />\r\n                ))\r\n            } <\r\n            /div> <\r\n            /div>\r\n        ); <\r\n        /div> <\r\n        /div> <\r\n        /InfiniteScroll> <\r\n        />\r\n    );\r\n};\r\nNews.defaultProps = {\r\n    country: \"in\",\r\n    pageSize: 6,\r\n    category: \"general\",\r\n};\r\n\r\nNews.propTypes = {\r\n    country: PropTypes.string,\r\n    pageSize: PropTypes.number,\r\n    category: PropTypes.string,\r\n};\r\n\r\nexport default News;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}