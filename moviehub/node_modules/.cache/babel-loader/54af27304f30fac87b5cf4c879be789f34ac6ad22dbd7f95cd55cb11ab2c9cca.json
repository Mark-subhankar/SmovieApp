{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\subhankar\\\\Desktop\\\\React-Project\\\\moviehub\\\\src\\\\Component\\\\MovieList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"../ComponentStyle/MovieListStyle.css\";\nimport { useParams } from \"react-router-dom\";\nimport Card from \"./Card\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MovieList = () => {\n  _s();\n  const [movieList, setMovieList] = useState([]);\n  const {\n    type\n  } = useParams();\n  const [page, setpage] = useState(1);\n\n  // useEffect(() => {\n  //     getData()\n  // }, [])\n\n  useEffect(() => {\n    getData();\n  }, [type]);\n  const getData = () => {\n    fetch(`https://api.themoviedb.org/3/movie/${type ? type : \"popular\"}?api_key=4eee0494b9dc4b3dd0c76812804c13c1&language=en-US`).then(res => res.json()).then(data => setMovieList(data.results));\n  };\n  const fetchMoreData = async () => {\n    setpage(page + 1);\n    let url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=6931ac46b3c14e6da7df97656c9d9265&page=1&pageSize=${props.pageSize}`;\n    // this.setState({ loding: true });\n    let data = await fetch(url);\n    let parsedData = await data.json();\n    setArticles(articles.concat(parsedData.articles));\n    settotalResults(parsedData.totalResults);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      dataLength: articles.length,\n      next: fetchMoreData,\n      hasMore: movieList,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie__list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"list__title\",\n          children: [\" \", \" \", \" \", (type ? type : \"POPULAR\").toUpperCase(), \" \", \" \", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this), \" \", \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list__cards\",\n          children: [\" \", \" \", \" \", movieList.map(movie => /*#__PURE__*/_jsxDEV(Card, {\n            movie: movie\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 40\n          }, this)), \" \", \" \", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 19\n        }, this), \" \", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), \" \"]\n  }, void 0, true);\n};\n_s(MovieList, \"7IAW73w9kPh0CDvsZ1OTsPZljt0=\", false, function () {\n  return [useParams];\n});\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Card","InfiniteScroll","jsxDEV","_jsxDEV","Fragment","_Fragment","MovieList","_s","movieList","setMovieList","type","page","setpage","getData","fetch","then","res","json","data","results","fetchMoreData","url","props","country","category","pageSize","parsedData","setArticles","articles","concat","settotalResults","totalResults","children","dataLength","length","next","hasMore","className","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","_c","$RefreshReg$"],"sources":["C:/Users/subhankar/Desktop/React-Project/moviehub/src/Component/MovieList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"../ComponentStyle/MovieListStyle.css\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Card from \"./Card\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\n\r\nconst MovieList = () => {\r\n    const [movieList, setMovieList] = useState([]);\r\n    const { type } = useParams();\r\n    const [page, setpage] = useState(1);\r\n\r\n\r\n    // useEffect(() => {\r\n    //     getData()\r\n    // }, [])\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    }, [type]);\r\n\r\n    const getData = () => {\r\n        fetch(\r\n                `https://api.themoviedb.org/3/movie/${\r\n        type ? type : \"popular\"\r\n      }?api_key=4eee0494b9dc4b3dd0c76812804c13c1&language=en-US`\r\n            )\r\n            .then((res) => res.json())\r\n            .then((data) => setMovieList(data.results));\r\n    };\r\n\r\n\r\n    const fetchMoreData = async() => {\r\n        setpage(page + 1);\r\n        let url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=6931ac46b3c14e6da7df97656c9d9265&page=1&pageSize=${props.pageSize}`;\r\n        // this.setState({ loding: true });\r\n        let data = await fetch(url);\r\n        let parsedData = await data.json();\r\n        setArticles(articles.concat(parsedData.articles));\r\n        settotalResults(parsedData.totalResults);\r\n    };\r\n\r\n    return ( <\r\n        >\r\n        <\r\n        InfiniteScroll dataLength = { articles.length }\r\n        next = { fetchMoreData }\r\n        hasMore = { movieList } >\r\n        <\r\n        div className = \"movie__list\" >\r\n        <\r\n        h2 className = \"list__title\" > { \" \" } {\r\n            (type ? type : \"POPULAR\").toUpperCase() } { \" \" } <\r\n        /h2>{\" \"} <\r\n        div className = \"list__cards\" > { \" \" } {\r\n            movieList.map((movie) => ( <\r\n                Card movie = { movie }\r\n                />\r\n            ))\r\n        } { \" \" } <\r\n        /div>{\" \"} <\r\n        /div> <\r\n        /InfiniteScroll> <\r\n        />\r\n    );\r\n};\r\n\r\nexport default MovieList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}