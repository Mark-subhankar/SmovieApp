{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/subhankar/Desktop/React-Project-MovieApp/moviehub/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _toConsumableArray from\"C:/Users/subhankar/Desktop/React-Project-MovieApp/moviehub/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _asyncToGenerator from\"C:/Users/subhankar/Desktop/React-Project-MovieApp/moviehub/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/subhankar/Desktop/React-Project-MovieApp/moviehub/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from\"react\";import\"../ComponentStyle/MovieListStyle.css\";import Card from\"./Card\";import InfiniteScroll from\"react-infinite-scroll-component\";import LoadingBar from\"react-top-loading-bar\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MovieList=function MovieList(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movies=_useState2[0],setMovies=_useState2[1];var _useState3=useState(1),_useState4=_slicedToArray(_useState3,2),page=_useState4[0],setPage=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),totalPages=_useState6[0],setTotalPages=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),loading=_useState8[0],setLoading=_useState8[1];// Add loading state\nvar _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),progress=_useState10[0],setProgress=_useState10[1];// Add progress state\nvar category=props.category;var fetchMovies=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var apiKey,url,response,data,results,total_pages;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:setLoading(true);// Set loading to true before making the API call\nsetProgress(30);// Set an initial progress value\napiKey=\"4eee0494b9dc4b3dd0c76812804c13c1\";url=\"https://api.themoviedb.org/3/movie/\".concat(category,\"?api_key=\").concat(apiKey,\"&language=en-US&page=\").concat(page);_context.prev=4;_context.next=7;return fetch(url);case 7:response=_context.sent;_context.next=10;return response.json();case 10:data=_context.sent;results=data.results,total_pages=data.total_pages;setMovies(function(prevMovies){return[].concat(_toConsumableArray(prevMovies),_toConsumableArray(results));});setTotalPages(total_pages);setProgress(100);// Set the progress to 100 when the API call is successful\n_context.next=20;break;case 17:_context.prev=17;_context.t0=_context[\"catch\"](4);console.error(\"Error fetching movies:\",_context.t0);case 20:_context.prev=20;setTimeout(function(){setLoading(false);// Set loading to false after a short delay\nsetProgress(0);// Reset the progress value\n},500);// Adjust the delay duration if needed\nreturn _context.finish(20);case 23:case\"end\":return _context.stop();}},_callee,null,[[4,17,20,23]]);}));return function fetchMovies(){return _ref.apply(this,arguments);};}();var fetchMoreMovies=function fetchMoreMovies(){if(page<totalPages){setPage(page+1);}};useEffect(function(){fetchMovies();},[page]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(LoadingBar,{progress:progress,height:3,color:\"#f11946\"}),\" \",\" \",\" \",\" \",\" \",\" \",/*#__PURE__*/_jsxs(InfiniteScroll,{dataLength:movies.length,next:fetchMoreMovies,hasMore:page<totalPages,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"movie__list\",children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"list__title\",children:[\" \",\" \",\" \",(category?category:\"POPULAR\").toUpperCase(),\" \",\" \",\" \"]}),\" \",\" \",/*#__PURE__*/_jsxs(\"div\",{className:\"list__cards\",children:[\" \",\" \",\" \",movies.map(function(movie){return/*#__PURE__*/_jsx(Card,{movie:movie},\"popular\");}),\" \",\" \",\" \"]}),\" \",\" \"]}),\" \",\" \"]}),\" \",\" \"]});};export default MovieList;","map":{"version":3,"names":["React","useEffect","useState","Card","InfiniteScroll","LoadingBar","jsx","_jsx","jsxs","_jsxs","MovieList","props","_useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","page","setPage","_useState5","_useState6","totalPages","setTotalPages","_useState7","_useState8","loading","setLoading","_useState9","_useState10","progress","setProgress","category","fetchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","apiKey","url","response","data","results","total_pages","wrap","_callee$","_context","prev","next","concat","fetch","sent","json","prevMovies","_toConsumableArray","t0","console","error","setTimeout","finish","stop","apply","arguments","fetchMoreMovies","children","height","color","dataLength","length","hasMore","className","toUpperCase","map","movie"],"sources":["C:/Users/subhankar/Desktop/React-Project-MovieApp/moviehub/src/Component/MovieList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"../ComponentStyle/MovieListStyle.css\";\r\nimport Card from \"./Card\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport LoadingBar from \"react-top-loading-bar\";\r\n\r\nconst MovieList = (props) => {\r\n    const [movies, setMovies] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [totalPages, setTotalPages] = useState(0);\r\n    const [loading, setLoading] = useState(false); // Add loading state\r\n    const [progress, setProgress] = useState(0); // Add progress state\r\n    const { category } = props;\r\n\r\n    const fetchMovies = async() => {\r\n        setLoading(true); // Set loading to true before making the API call\r\n        setProgress(30); // Set an initial progress value\r\n\r\n        const apiKey = \"4eee0494b9dc4b3dd0c76812804c13c1\";\r\n        const url = `https://api.themoviedb.org/3/movie/${category}?api_key=${apiKey}&language=en-US&page=${page}`;\r\n\r\n        try {\r\n            const response = await fetch(url);\r\n            const data = await response.json();\r\n            const { results, total_pages } = data;\r\n            setMovies((prevMovies) => [...prevMovies, ...results]);\r\n            setTotalPages(total_pages);\r\n            setProgress(100); // Set the progress to 100 when the API call is successful\r\n        } catch (error) {\r\n            console.error(\"Error fetching movies:\", error);\r\n        } finally {\r\n            setTimeout(() => {\r\n                setLoading(false); // Set loading to false after a short delay\r\n                setProgress(0); // Reset the progress value\r\n            }, 500); // Adjust the delay duration if needed\r\n        }\r\n    };\r\n\r\n    const fetchMoreMovies = () => {\r\n        if (page < totalPages) {\r\n            setPage(page + 1);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchMovies();\r\n    }, [page]);\r\n\r\n    return ( <\r\n        div >\r\n        <\r\n        LoadingBar progress = { progress }\r\n        height = { 3 }\r\n        color = \"#f11946\" / > { \" \" } { /* Use the progress state */ } { \" \" } <\r\n        InfiniteScroll dataLength = { movies.length }\r\n        next = { fetchMoreMovies }\r\n        hasMore = { page < totalPages } >\r\n        <\r\n        div className = \"movie__list\" >\r\n        <\r\n        h2 className = \"list__title\" > { \" \" } {\r\n            (category ? category : \"POPULAR\").toUpperCase() } { \" \" } <\r\n        /h2>{\" \"} <\r\n        div className = \"list__cards\" > { \" \" } {\r\n            movies.map((movie) => ( <\r\n                Card key = \"popular\"\r\n                movie = { movie }\r\n                />\r\n            ))\r\n        } { \" \" } <\r\n        /div>{\" \"} <\r\n        /div>{\" \"} <\r\n        /InfiniteScroll>{\" \"} <\r\n        /div>\r\n    );\r\n};\r\n\r\nexport default MovieList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}