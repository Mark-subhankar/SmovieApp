{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\subhankar\\\\Desktop\\\\React-Project\\\\moviehub\\\\src\\\\Component\\\\MovieList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"../ComponentStyle/MovieListStyle.css\";\nimport Card from \"./Card\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport Spinner from \"./Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieList = props => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [loding, setloding] = useState(false);\n  const {\n    category\n  } = props;\n  const fetchMovies = async () => {\n    const apiKey = \"4eee0494b9dc4b3dd0c76812804c13c1\";\n    const url = `https://api.themoviedb.org/3/movie/${category}?api_key=${apiKey}&language=en-US&page=${page}`;\n    try {\n      setloding(true);\n      const response = await fetch(url);\n      const data = await response.json();\n      const {\n        results,\n        total_pages\n      } = data;\n      setMovies(prevMovies => [...prevMovies, ...results]);\n      setTotalPages(total_pages);\n      setloding(false);\n    } catch (error) {\n      console.error(\"Error fetching movies:\", error);\n    }\n  };\n  const fetchMoreMovies = () => {\n    if (page < totalPages) {\n      setPage(page + 1);\n    }\n  };\n  useEffect(() => {\n    fetchMovies();\n  }, [page]);\n  return /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n    dataLength: movies.length,\n    next: fetchMoreMovies,\n    hasMore: page < totalPages,\n    loader: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 20\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie__list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"list__title\",\n        children: [\" \", \" \", \" \", (category ? category : \"POPULAR\").toUpperCase(), \" \", \" \", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), \" \", \" \", loding && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 31\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list__cards\",\n        children: [\" \", \" \", \" \", movies.map(movie => /*#__PURE__*/_jsxDEV(Card, {\n          movie: movie\n        }, \"popular\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 37\n        }, this)), \" \", \" \", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 47\n      }, this), \" \", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), \" \", \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 14\n  }, this);\n};\n_s(MovieList, \"E7QXRy4Ea35AwE7KOG55M+TBJMI=\");\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useEffect","useState","Card","InfiniteScroll","Spinner","jsxDEV","_jsxDEV","MovieList","props","_s","movies","setMovies","page","setPage","totalPages","setTotalPages","loding","setloding","category","fetchMovies","apiKey","url","response","fetch","data","json","results","total_pages","prevMovies","error","console","fetchMoreMovies","dataLength","length","next","hasMore","loader","fileName","_jsxFileName","lineNumber","columnNumber","children","className","toUpperCase","map","movie","_c","$RefreshReg$"],"sources":["C:/Users/subhankar/Desktop/React-Project/moviehub/src/Component/MovieList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"../ComponentStyle/MovieListStyle.css\";\r\nimport Card from \"./Card\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Spinner from \"./Spinner\";\r\n\r\nconst MovieList = (props) => {\r\n    const [movies, setMovies] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [totalPages, setTotalPages] = useState(0);\r\n    const [loding, setloding] = useState(false);\r\n\r\n    const { category } = props;\r\n\r\n    const fetchMovies = async() => {\r\n        const apiKey = \"4eee0494b9dc4b3dd0c76812804c13c1\";\r\n        const url = `https://api.themoviedb.org/3/movie/${category}?api_key=${apiKey}&language=en-US&page=${page}`;\r\n\r\n        try {\r\n            setloding(true)\r\n            const response = await fetch(url);\r\n            const data = await response.json();\r\n            const { results, total_pages } = data;\r\n\r\n            setMovies((prevMovies) => [...prevMovies, ...results]);\r\n            setTotalPages(total_pages);\r\n            setloding(false)\r\n        } catch (error) {\r\n            console.error(\"Error fetching movies:\", error);\r\n        }\r\n    };\r\n\r\n    const fetchMoreMovies = () => {\r\n        if (page < totalPages) {\r\n            setPage(page + 1);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchMovies();\r\n    }, [page]);\r\n\r\n    return ( <\r\n        InfiniteScroll dataLength = { movies.length }\r\n        next = { fetchMoreMovies }\r\n        hasMore = { page < totalPages }\r\n        loader = { < Spinner / > } >\r\n        <\r\n        div className = \"movie__list\" >\r\n        <\r\n        h2 className = \"list__title\" > { \" \" } {\r\n            (category ? category : \"POPULAR\").toUpperCase() } { \" \" } <\r\n        /h2>{\" \"} { loding && < Spinner / > } <\r\n        div className = \"list__cards\" > { \" \" } {\r\n            movies.map((movie) => ( <\r\n                Card key = \"popular\"\r\n                movie = { movie }\r\n                />\r\n            ))\r\n        } { \" \" } <\r\n        /div>{\" \"} <\r\n        /div>{\" \"} <\r\n        /InfiniteScroll>\r\n    );\r\n};\r\n\r\nexport default MovieList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}