{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\subhankar\\\\Desktop\\\\React-Project-MovieApp\\\\moviehub\\\\src\\\\Component\\\\MovieSublist.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"../ComponentStyle/MovieListStyle.css\";\nimport Card from \"./Card\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport LoadingBar from \"react-top-loading-bar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieSublist = props => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const {\n    category,\n    with_genres\n  } = props;\n  const [loading, setLoading] = useState(false); // Add loading state\n  const [progress, setProgress] = useState(0); // Add progress state\n\n  const fetchMovies = async () => {\n    setLoading(true); // Set loading to true before making the API call\n    setProgress(30); // Set an initial progress value\n\n    const apiKey = \"4eee0494b9dc4b3dd0c76812804c13c1\";\n    const url = `https://api.themoviedb.org/3/discover/movie?api_key=${apiKey}&language=en-US&sort_by=popularity.desc&with_genres=${with_genres}&page=${page}`;\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      const {\n        results,\n        total_pages\n      } = data;\n      setMovies(prevMovies => [...prevMovies, ...results]);\n      setTotalPages(total_pages);\n      setProgress(100); // Set the progress to 100 when the API call is successful\n    } catch (error) {\n      console.error(\"Error fetching movies:\", error);\n    } finally {\n      setTimeout(() => {\n        setLoading(false); // Set loading to false after a short delay\n        setProgress(0); // Reset the progress value\n      }, 500); // Adjust the delay duration if needed\n    }\n  };\n\n  const fetchMoreMovies = () => {\n    if (page < totalPages) {\n      setPage(page + 1);\n    }\n  };\n  useEffect(() => {\n    fetchMovies();\n  }, [page]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(LoadingBar, {\n      progress: progress,\n      height: 3,\n      color: \"#f11946\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), \" \", \" \", \" \", \" \", /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      dataLength: movies.length,\n      next: fetchMoreMovies,\n      hasMore: page < totalPages,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie__list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"list__title\",\n          children: [\" \", \" \", \" \", (category ? category : \"POPULAR\").toUpperCase(), \" \", \" \", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), \" \", \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list__cards\",\n          children: [\" \", \" \", \" \", movies.map(movie => /*#__PURE__*/_jsxDEV(Card, {\n            movie: movie\n          }, \"popular\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 37\n          }, this)), \" \", \" \", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 19\n        }, this), \" \", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), \" \", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 72\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 14\n  }, this);\n};\n_s(MovieSublist, \"cM2eHqJSRKWwHfudatCX2Aa8Jlo=\");\n_c = MovieSublist;\nexport default MovieSublist;\nvar _c;\n$RefreshReg$(_c, \"MovieSublist\");","map":{"version":3,"names":["React","useEffect","useState","Card","InfiniteScroll","LoadingBar","jsxDEV","_jsxDEV","MovieSublist","props","_s","movies","setMovies","page","setPage","totalPages","setTotalPages","category","with_genres","loading","setLoading","progress","setProgress","fetchMovies","apiKey","url","response","fetch","data","json","results","total_pages","prevMovies","error","console","setTimeout","fetchMoreMovies","children","height","color","fileName","_jsxFileName","lineNumber","columnNumber","dataLength","length","next","hasMore","className","toUpperCase","map","movie","_c","$RefreshReg$"],"sources":["C:/Users/subhankar/Desktop/React-Project-MovieApp/moviehub/src/Component/MovieSublist.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"../ComponentStyle/MovieListStyle.css\";\r\nimport Card from \"./Card\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport LoadingBar from \"react-top-loading-bar\";\r\n\r\nconst MovieSublist = (props) => {\r\n    const [movies, setMovies] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [totalPages, setTotalPages] = useState(0);\r\n    const { category, with_genres } = props;\r\n    const [loading, setLoading] = useState(false); // Add loading state\r\n    const [progress, setProgress] = useState(0); // Add progress state\r\n\r\n    const fetchMovies = async() => {\r\n        setLoading(true); // Set loading to true before making the API call\r\n        setProgress(30); // Set an initial progress value\r\n\r\n        const apiKey = \"4eee0494b9dc4b3dd0c76812804c13c1\";\r\n\r\n        const url = `https://api.themoviedb.org/3/discover/movie?api_key=${apiKey}&language=en-US&sort_by=popularity.desc&with_genres=${with_genres}&page=${page}`;\r\n\r\n        try {\r\n            const response = await fetch(url);\r\n            const data = await response.json();\r\n            const { results, total_pages } = data;\r\n\r\n            setMovies((prevMovies) => [...prevMovies, ...results]);\r\n            setTotalPages(total_pages);\r\n            setProgress(100); // Set the progress to 100 when the API call is successful\r\n        } catch (error) {\r\n            console.error(\"Error fetching movies:\", error);\r\n        } finally {\r\n            setTimeout(() => {\r\n                setLoading(false); // Set loading to false after a short delay\r\n                setProgress(0); // Reset the progress value\r\n            }, 500); // Adjust the delay duration if needed\r\n        }\r\n    };\r\n\r\n    const fetchMoreMovies = () => {\r\n        if (page < totalPages) {\r\n            setPage(page + 1);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchMovies();\r\n    }, [page]);\r\n\r\n    return ( <\r\n        div >\r\n        <\r\n        LoadingBar progress = { progress }\r\n        height = { 3 }\r\n        color = \"#f11946\" / > { \" \" } { /* Use the progress state */ } <\r\n        InfiniteScroll dataLength = { movies.length }\r\n        next = { fetchMoreMovies }\r\n        hasMore = { page < totalPages } >\r\n        <\r\n        div className = \"movie__list\" >\r\n        <\r\n        h2 className = \"list__title\" > { \" \" } {\r\n            (category ? category : \"POPULAR\").toUpperCase() } { \" \" } <\r\n        /h2>{\" \"} <\r\n        div className = \"list__cards\" > { \" \" } {\r\n            movies.map((movie) => ( <\r\n                Card key = \"popular\"\r\n                movie = { movie }\r\n                />\r\n            ))\r\n        } { \" \" } <\r\n        /div>{\" \"} <\r\n        /div>{\" \"} <\r\n        /InfiniteScroll> <\r\n        /div>\r\n    );\r\n};\r\n\r\nexport default MovieSublist;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,sCAAsC;AAC7C,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,cAAc,MAAM,iCAAiC;AAC5D,OAAOC,UAAU,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC5B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM;IAAEe,QAAQ;IAAEC;EAAY,CAAC,GAAGT,KAAK;EACvC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE7C,MAAMqB,WAAW,GAAG,MAAAA,CAAA,KAAW;IAC3BH,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;IAClBE,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;;IAEjB,MAAME,MAAM,GAAG,kCAAkC;IAEjD,MAAMC,GAAG,GAAI,uDAAsDD,MAAO,uDAAsDN,WAAY,SAAQL,IAAK,EAAC;IAE1J,IAAI;MACA,MAAMa,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;MACjC,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,MAAM;QAAEC,OAAO;QAAEC;MAAY,CAAC,GAAGH,IAAI;MAErChB,SAAS,CAAEoB,UAAU,IAAK,CAAC,GAAGA,UAAU,EAAE,GAAGF,OAAO,CAAC,CAAC;MACtDd,aAAa,CAACe,WAAW,CAAC;MAC1BT,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,OAAOW,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD,CAAC,SAAS;MACNE,UAAU,CAAC,MAAM;QACbf,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;QACnBE,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;MACpB,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;IACb;EACJ,CAAC;;EAED,MAAMc,eAAe,GAAGA,CAAA,KAAM;IAC1B,IAAIvB,IAAI,GAAGE,UAAU,EAAE;MACnBD,OAAO,CAACD,IAAI,GAAG,CAAC,CAAC;IACrB;EACJ,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACZsB,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,CAACV,IAAI,CAAC,CAAC;EAEV,oBAASN,OAAA;IAAA8B,QAAA,gBAEL9B,OAAA,CACAF,UAAU;MAACgB,QAAQ,EAAKA,QAAU;MAClCiB,MAAM,EAAK,CAAG;MACdC,KAAK,EAAG;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,KAAC,EAAE,GAAG,EAAE,GAAC,EAAgC,GAAC,eAAApC,OAAA,CAC/DH,cAAc;MAACwC,UAAU,EAAKjC,MAAM,CAACkC,MAAQ;MAC7CC,IAAI,EAAKV,eAAiB;MAC1BW,OAAO,EAAKlC,IAAI,GAAGE,UAAY;MAAAsB,QAAA,gBAC/B9B,OAAA;QACIyC,SAAS,EAAG,aAAa;QAAAX,QAAA,gBAC7B9B,OAAA;UACGyC,SAAS,EAAG,aAAa;UAAAX,QAAA,GAAE,GAAC,EAAE,GAAG,EAAE,GAAC,EACnC,CAACpB,QAAQ,GAAGA,QAAQ,GAAG,SAAS,EAAEgC,WAAW,CAAC,CAAC,EAAE,GAAC,EAAE,GAAG,EAAE,GAAC;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3D,CAAC,EAAC,GAAG,EAAC,GAAC,eAAApC,OAAA;UACNyC,SAAS,EAAG,aAAa;UAAAX,QAAA,GAAE,GAAC,EAAE,GAAG,EAAE,GAAC,EACpC1B,MAAM,CAACuC,GAAG,CAAEC,KAAK,iBAAO5C,OAAA,CACpBJ,IAAI;YACJgD,KAAK,EAAKA;UAAO,GADN,SAAS;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEnB,CACJ,CAAC,EACL,GAAC,EAAE,GAAG,EAAE,GAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,EAAC,GAAG,EAAC,GAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,EAAC,GAAG,EAAC,GAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEb,CAAC;AAACjC,EAAA,CAvEIF,YAAY;AAAA4C,EAAA,GAAZ5C,YAAY;AAyElB,eAAeA,YAAY;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}